import { r as registerInstance, h, g as getElement } from './index-39969785.js';
import '@aws-amplify/core';
import './auth-types-78df304e.js';
import '@aws-amplify/auth';
import './Translations-392acb9b.js';
import './constants-d1abe7de.js';
import { e as hasShadowDom } from './helpers-01ecf5f9.js';
var amplifyButtonCss = ":host{--background-color:var(--amplify-primary-color);--background-color-active:var(--amplify-primary-shade);--background-color-disable:var(--amplify-primary-tint);--color:var(--amplify-primary-contrast);--border-width:0;--border-color:initial;--border-style:initial;--link-color:var(--amplify-primary-color);--link-hover:var(--amplify-primary-tint);--link-active:var(--amplify-primary-shade);--text-transform:uppercase;--icon-fill:var(--amplify-white);--icon-height:1.25rem;--padding:1rem;--width:100%;width:var(--width);text-align:center}@media (min-width: 672px){:host{width:inherit}}.button{width:100%;min-width:153px;display:inline-block;margin-bottom:0;font-size:var(--amplify-text-sm);font-family:var(--amplify-font-family);font-weight:600;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;color:var(--color);padding:var(--padding);letter-spacing:0.75px;text-transform:var(--text-transform);background-color:var(--background-color);border-width:var(--border-width);border-color:var(--border-color);border-style:var(--border-style)}.button:active{opacity:1;background-color:var(--background-color-active)}.button:hover{opacity:0.8}.button:disabled{opacity:0.65;cursor:auto;background-color:var(--background-color-disable)}.icon{background-color:inherit;border:none;font:inherit;cursor:pointer;padding:var(--padding)}.icon amplify-icon{--icon-fill-color:var(--icon-fill);--height:var(--icon-height)}.anchor{color:var(--link-color);background-color:inherit;padding:0;border:none;font:inherit;cursor:pointer}.anchor:link{color:var(--link-color);text-decoration:none}.anchor:hover{color:var(--link-hover);text-decoration:underline}.anchor:active{color:var(--link-active);text-decoration:underline}";
var AmplifyButton = /** @class */ (function () {
    function AmplifyButton(hostRef) {
        var _this = this;
        registerInstance(this, hostRef);
        /** Type of the button: 'button', 'submit' or 'reset' */
        this.type = 'button';
        /** Variant of a button: 'button' | 'anchor' */
        this.variant = 'button';
        /** Disabled state of the button */
        this.disabled = false;
        this.handleClick = function (ev) {
            if (_this.handleButtonClick) {
                _this.handleButtonClick(ev);
            }
            else if (hasShadowDom(_this.el) && _this.type == 'submit') {
                // this button wants to specifically submit a form
                // climb up the dom to see if we're in a <form>
                // and if so, then use JS to submit it
                var form = _this.el.closest('form');
                if (!form) {
                    // Check for form inside of form section's shadow dom
                    var formSection = _this.el.closest('amplify-form-section');
                    form = formSection && formSection.shadowRoot.querySelector('form');
                }
                if (form) {
                    ev.preventDefault();
                    var fakeButton = document.createElement('button');
                    fakeButton.type = _this.type;
                    fakeButton.style.display = 'none';
                    form.appendChild(fakeButton);
                    fakeButton.click();
                    fakeButton.remove();
                }
            }
        };
    }
    AmplifyButton.prototype.render = function () {
        var _a;
        return (h("button", { class: (_a = {},
                _a[this.variant] = true,
                _a), type: this.type, disabled: this.disabled, onClick: this.handleClick }, this.variant === 'icon' && h("amplify-icon", { name: this.icon }), h("slot", null)));
    };
    Object.defineProperty(AmplifyButton.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: false,
        configurable: true
    });
    return AmplifyButton;
}());
AmplifyButton.style = amplifyButtonCss;
var amplifyLoadingSpinnerCss = ":host{--spinner-circle-fill:var(--amplify-smoke-white);--spinner-bar-fill:var(--amplify-primary-color);--width:0.875rem;--height:0.875rem}.loading-spinner svg{-webkit-animation:loading-spinner 1s linear infinite;animation:loading-spinner 1s linear infinite;width:var(--width);height:var(--height)}.loading-spinner svg #spinner-circle{fill:var(--spinner-circle-fill)}.loading-spinner svg #spinner-bar{fill:var(--spinner-bar-fill)}@-webkit-keyframes loading-spinner{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes loading-spinner{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}";
var AmplifyLoadingSpinner = /** @class */ (function () {
    function AmplifyLoadingSpinner(hostRef) {
        registerInstance(this, hostRef);
    }
    AmplifyLoadingSpinner.prototype.render = function () {
        return h("amplify-icon", { class: "loading-spinner", name: "loading" });
    };
    return AmplifyLoadingSpinner;
}());
AmplifyLoadingSpinner.style = amplifyLoadingSpinnerCss;
var amplifySectionCss = ":host{--font-family:var(--amplify-font-family);--background-color:var(--amplify-background-color)}.section{position:relative;margin-bottom:var(--margin-bottom);background-color:var(--background-color);padding:var(--padding);text-align:left;display:inline-block;border-radius:var(--border-radius);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);-webkit-box-sizing:border-box;box-sizing:border-box;font-family:var(--font-family);width:100%;min-width:var(--min-width)}@media (min-width: 672px){.section{width:var(--width)}}";
var AmplifySection = /** @class */ (function () {
    function AmplifySection(hostRef) {
        registerInstance(this, hostRef);
        /** Equivalent to html section role */
        this.role = 'application';
    }
    AmplifySection.prototype.render = function () {
        return (h("section", { class: "section", role: this.role }, h("slot", null)));
    };
    Object.defineProperty(AmplifySection.prototype, "el", {
        get: function () { return getElement(this); },
        enumerable: false,
        configurable: true
    });
    return AmplifySection;
}());
AmplifySection.style = amplifySectionCss;
export { AmplifyButton as amplify_button, AmplifyLoadingSpinner as amplify_loading_spinner, AmplifySection as amplify_section };
