"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRequest = void 0;
var tslib_1 = require("tslib");
function createRequest(client, command) {
    return tslib_1.__awaiter(this, void 0, void 0, function () {
        var interceptMiddleware, clientStack, handler;
        var _this = this;
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    interceptMiddleware = function (next) { return function (args) { return tslib_1.__awaiter(_this, void 0, void 0, function () {
                        return tslib_1.__generator(this, function (_a) {
                            return [2 /*return*/, { output: { request: args.request }, response: undefined }];
                        });
                    }); }; };
                    clientStack = client.middlewareStack.clone();
                    //add middleware to the last of 'build' step
                    clientStack.add(interceptMiddleware, {
                        step: "build",
                        priority: "low",
                    });
                    handler = command.resolveMiddleware(clientStack, client.config, undefined);
                    return [4 /*yield*/, handler(command).then(function (output) { return output.output.request; })];
                case 1: 
                //@ts-ignore
                return [2 /*return*/, _a.sent()];
            }
        });
    });
}
exports.createRequest = createRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUdBLFNBQXNCLGFBQWEsQ0FLakMsTUFBeUQsRUFDekQsT0FBNkU7Ozs7Ozs7b0JBR3ZFLG1CQUFtQixHQUEyQyxVQUFDLElBQUksSUFBSyxPQUFBLFVBQU8sSUFBSTs7NEJBQ3ZGLHNCQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQVMsRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEVBQUM7O3lCQUMxRSxFQUY2RSxDQUU3RSxDQUFDO29CQUNJLFdBQVcsR0FBRyxNQUFNLENBQUMsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDO29CQUVuRCw0Q0FBNEM7b0JBQzVDLFdBQVcsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUU7d0JBQ25DLElBQUksRUFBRSxPQUFPO3dCQUNiLFFBQVEsRUFBRSxLQUFLO3FCQUNoQixDQUFDLENBQUM7b0JBRUcsT0FBTyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztvQkFHMUUscUJBQU0sT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLE1BQU0sSUFBSyxPQUFBLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFyQixDQUFxQixDQUFDLEVBQUE7O2dCQURyRSxZQUFZO2dCQUNaLHNCQUFPLFNBQThELEVBQUM7Ozs7Q0FDdkU7QUF4QkQsc0NBd0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2xpZW50LCBDb21tYW5kIH0gZnJvbSBcIkBhd3Mtc2RrL3NtaXRoeS1jbGllbnRcIjtcbmltcG9ydCB7IEJ1aWxkTWlkZGxld2FyZSwgSHR0cFJlcXVlc3QsIE1ldGFkYXRhQmVhcmVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVSZXF1ZXN0PFxuICBJbnB1dFR5cGVzVW5pb24gZXh0ZW5kcyBvYmplY3QsXG4gIElucHV0VHlwZSBleHRlbmRzIElucHV0VHlwZXNVbmlvbixcbiAgT3V0cHV0VHlwZSBleHRlbmRzIE1ldGFkYXRhQmVhcmVyID0gTWV0YWRhdGFCZWFyZXJcbj4oXG4gIGNsaWVudDogQ2xpZW50PGFueSwgSW5wdXRUeXBlc1VuaW9uLCBNZXRhZGF0YUJlYXJlciwgYW55PixcbiAgY29tbWFuZDogQ29tbWFuZDxJbnB1dFR5cGUsIE91dHB1dFR5cGUsIGFueSwgSW5wdXRUeXBlc1VuaW9uLCBNZXRhZGF0YUJlYXJlcj5cbik6IFByb21pc2U8SHR0cFJlcXVlc3Q+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICBjb25zdCBpbnRlcmNlcHRNaWRkbGV3YXJlOiBCdWlsZE1pZGRsZXdhcmU8SW5wdXRUeXBlLCBPdXRwdXRUeXBlPiA9IChuZXh0KSA9PiBhc3luYyAoYXJncykgPT4ge1xuICAgIHJldHVybiB7IG91dHB1dDogeyByZXF1ZXN0OiBhcmdzLnJlcXVlc3QgfSBhcyBhbnksIHJlc3BvbnNlOiB1bmRlZmluZWQgfTtcbiAgfTtcbiAgY29uc3QgY2xpZW50U3RhY2sgPSBjbGllbnQubWlkZGxld2FyZVN0YWNrLmNsb25lKCk7XG5cbiAgLy9hZGQgbWlkZGxld2FyZSB0byB0aGUgbGFzdCBvZiAnYnVpbGQnIHN0ZXBcbiAgY2xpZW50U3RhY2suYWRkKGludGVyY2VwdE1pZGRsZXdhcmUsIHtcbiAgICBzdGVwOiBcImJ1aWxkXCIsXG4gICAgcHJpb3JpdHk6IFwibG93XCIsXG4gIH0pO1xuXG4gIGNvbnN0IGhhbmRsZXIgPSBjb21tYW5kLnJlc29sdmVNaWRkbGV3YXJlKGNsaWVudFN0YWNrLCBjbGllbnQuY29uZmlnLCB1bmRlZmluZWQpO1xuXG4gIC8vQHRzLWlnbm9yZVxuICByZXR1cm4gYXdhaXQgaGFuZGxlcihjb21tYW5kKS50aGVuKChvdXRwdXQpID0+IG91dHB1dC5vdXRwdXQucmVxdWVzdCk7XG59XG4iXX0=