import { PollyClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../PollyClient";
import { GetLexiconInput, GetLexiconOutput } from "../models/index";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type GetLexiconCommandInput = GetLexiconInput;
export declare type GetLexiconCommandOutput = GetLexiconOutput & __MetadataBearer;
export declare class GetLexiconCommand extends $Command<GetLexiconCommandInput, GetLexiconCommandOutput, PollyClientResolvedConfig> {
    readonly input: GetLexiconCommandInput;
    constructor(input: GetLexiconCommandInput);
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: PollyClientResolvedConfig, options?: __HttpHandlerOptions): Handler<GetLexiconCommandInput, GetLexiconCommandOutput>;
    private serialize;
    private deserialize;
}
